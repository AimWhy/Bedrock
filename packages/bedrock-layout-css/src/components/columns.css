/*
  columns.css
*/

/*
  columns component
*/

@property --gutter {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0;
}

@property --columns {
  syntax: "<number>";
  inherits: false;
  initial-value: 1;
}

@property --span {
  syntax: "<number>";
  inherits: false;
  initial-value: 1;
}

@property --offsetStart {
  syntax: "<number>";
  inherits: false;
  initial-value: 1;
}

@property --offsetEnd {
  syntax: "<number>";
  inherits: false;
  initial-value: 1;
}

[data-bedrock-layout-columns] {
  box-sizing: border-box;
  display: grid;
  gap: var(--gutter, 0);
  grid-template-columns: repeat(var(--columns, 1), 1fr);
  grid-auto-flow: row;
}

[data-bedrock-layout-columns] > * {
  margin: 0;
}

[data-bedrock-layout-columns="dense"] {
  grid-auto-flow: row dense;
}

/*
  column component
*/

[data-bedrock-layout-column] {
  grid-column: span min(var(--span, 1), var(--columns, 1));
}

[data-bedrock-layout-column][style*="--offset"] > * {
  grid-column: span min(var(--span, 1), var(--columns, 1));
}

[data-bedrock-layout-column][style~="--offsetStart"]::before {
  content: "";
  grid-column: span min(var(--offsetStart, 1), var(--columns, 1));
}

[data-bedrock-layout-column][style~="--offsetEnd"]::before {
  content: "";
  grid-column: span min(var(--offsetEnd, 1), var(--columns, 1));
}
