/*
  columns.css
*/

/*
  columns component
*/

[data-bedrock-columns] {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, 0);
}

[data-bedrock-columns][data-bedrock-columns] > * {
  --numberOfGutters: calc(var(--columns, 1) - 1);
  --largestWidth: calc(
    100% - max(var(--gutter, 0px) * var(--numberOfGutters), 0px)
  );
  --columnWidth: calc(var(--largestWidth) / var(--columns, 1));
  --basis: calc(
    (var(--switchAt, var(--largestWidth)) - (var(--largestWidth) + 1px)) * 999
  );
  margin: 0;
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: var(--basis);
  min-inline-size: min(min(var(--columnWidth), 100%), var(--largestWidth));
  max-inline-size: min(max(var(--basis), var(--columnWidth)), 100%);
}

/* Gutter Sizes */
[data-bedrock-columns~="gutter:size000"] {
  --gutter: -0.5rem;
}
[data-bedrock-columns~="gutter:size00"] {
  --gutter: -0.25rem;
}
[data-bedrock-columns~="gutter:size1"] {
  --gutter: 0.25rem;
}
[data-bedrock-columns~="gutter:size2"] {
  --gutter: 0.5rem;
}
[data-bedrock-columns~="gutter:size3"] {
  --gutter: 1rem;
}
[data-bedrock-columns~="gutter:size4"] {
  --gutter: 1.25rem;
}
[data-bedrock-columns~="gutter:size5"] {
  --gutter: 1.5rem;
}
[data-bedrock-columns~="gutter:size6"] {
  --gutter: 1.75rem;
}
[data-bedrock-columns~="gutter:size7"] {
  --gutter: 2rem;
}
[data-bedrock-columns~="gutter:size8"] {
  --gutter: 3rem;
}
[data-bedrock-columns~="gutter:size9"] {
  --gutter: 4rem;
}
[data-bedrock-columns~="gutter:size10"] {
  --gutter: 5rem;
}
[data-bedrock-columns~="gutter:size11"] {
  --gutter: 7.5rem;
}
[data-bedrock-columns~="gutter:size12"] {
  --gutter: 10rem;
}
[data-bedrock-columns~="gutter:size13"] {
  --gutter: 15rem;
}
[data-bedrock-columns~="gutter:size14"] {
  --gutter: 20rem;
}
[data-bedrock-columns~="gutter:size15"] {
  --gutter: 30rem;
}

/*
  column component
*/

[data-bedrock-column][style*="--span"] {
  --maxSpan: min(var(--span, 1), var(--columns, 1));
  --guttersToAdd: calc(var(--maxSpan, 1) - 1);
  --gutterSize: calc(var(--gutter, 0px) * var(--guttersToAdd));
  --columnWidth: calc(
    ((var(--largestWidth) / var(--columns, 1)) * var(--maxSpan, 1)) +
      var(--gutterSize)
  );
}

[data-bedrock-column][style*="--offsetStart"] {
  --maxOffsetStart: min(var(--offsetStart, 1), var(--columns, 1));
  --marginOffsetStartGutters: calc(var(--gutter, 0px) * var(--maxOffsetStart));
  --marginOffsetStart: calc(
    (var(--largestWidth) / var(--columns, 1)) * var(--maxOffsetStart, 1) +
      var(--marginOffsetStartGutters)
  );
  --basisSwitcher: max(var(--basis) * -1, 0px);
  margin-inline-start: min(var(--marginOffsetStart), var(--basisSwitcher));
}

[data-bedrock-column][style*="--offsetEnd"] {
  --maxOffsetEnd: min(var(--offsetEnd, 1), var(--columns, 1));
  --marginOffsetEndGutters: calc(var(--gutter, 0px) * var(--maxOffsetEnd));
  --marginOffsetEnd: calc(
    (var(--largestWidth) / var(--columns, 1)) * var(--maxOffsetEnd, 1) +
      var(--marginOffsetEndGutters)
  );
  --basisSwitcher: max(var(--basis) * -1, 0px);
  margin-inline-end: min(var(--marginOffsetEnd), var(--basisSwitcher));
}
