/*
  columns.css
*/

/*
  columns component
*/

@property --gutter {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0;
}

@property --columns {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}

@property --span {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}

@property --offsetStart {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}

@property --offsetEnd {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}

[data-bedrock-columns] {
  box-sizing: border-box;
  display: grid;
  gap: var(--gutter, 0);
  grid-template-columns: repeat(var(--columns, 1), 1fr);
  grid-auto-flow: row;
}

[data-bedrock-columns] > * {
  margin: 0;
}

[data-bedrock-columns~="dense"] {
  grid-auto-flow: row dense;
}

/* Gutter Sizes */
[data-bedrock-columns~="gutter:size000"] {
  --gutter: -0.5rem;
}
[data-bedrock-columns~="gutter:size00"] {
  --gutter: -0.25rem;
}
[data-bedrock-columns~="gutter:size1"] {
  --gutter: 0.25rem;
}
[data-bedrock-columns~="gutter:size2"] {
  --gutter: 0.5rem;
}
[data-bedrock-columns~="gutter:size3"] {
  --gutter: 1rem;
}
[data-bedrock-columns~="gutter:size4"] {
  --gutter: 1.25rem;
}
[data-bedrock-columns~="gutter:size5"] {
  --gutter: 1.5rem;
}
[data-bedrock-columns~="gutter:size6"] {
  --gutter: 1.75rem;
}
[data-bedrock-columns~="gutter:size7"] {
  --gutter: 2rem;
}
[data-bedrock-columns~="gutter:size8"] {
  --gutter: 3rem;
}
[data-bedrock-columns~="gutter:size9"] {
  --gutter: 4rem;
}
[data-bedrock-columns~="gutter:size10"] {
  --gutter: 5rem;
}
[data-bedrock-columns~="gutter:size11"] {
  --gutter: 7.5rem;
}
[data-bedrock-columns~="gutter:size12"] {
  --gutter: 10rem;
}
[data-bedrock-columns~="gutter:size13"] {
  --gutter: 15rem;
}
[data-bedrock-columns~="gutter:size14"] {
  --gutter: 20rem;
}
[data-bedrock-columns~="gutter:size15"] {
  --gutter: 30rem;
}

/*
  column component
*/

[data-bedrock-column] {
  grid-column: span min(var(--span, 1), var(--columns, 1));
}

[data-bedrock-column][style*="--offset"] {
  display: contents;
}

[data-bedrock-column][style*="--offset"] > * {
  grid-column: span min(var(--span, 1), var(--columns, 1));
}

[data-bedrock-column][style*="--offsetStart"]::before {
  content: "";
  grid-column: span min(var(--offsetStart, 1), var(--columns, 1));
}

[data-bedrock-column][style*="--offsetEnd"]::after {
  content: "";
  grid-column: span min(var(--offsetEnd, 1), var(--columns, 1));
}
