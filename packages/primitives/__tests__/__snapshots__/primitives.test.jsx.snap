// Vitest Snapshot v1

exports[`primitives > primitives snapshot 1`] = `
{
  "AppBoundary": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -773662986,
      "baseStyle": undefined,
      "componentId": "sc-gsnTZi",
      "isStatic": false,
      "rules": [
        "
  padding: 0;
  max-inline-size: 100%;
  overflow: hidden;
  height: 100%;
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "boundarySize": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-gsnTZi",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Center": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 252031076,
      "baseStyle": undefined,
      "componentId": "sc-bczRLJ",
      "isStatic": false,
      "rules": [
        "
  @property --maxWidth {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 100%;
  }

  box-sizing: content-box;

  && {
    margin-inline-start: auto;
    margin-inline-end: auto;
    margin-inline: auto;
  }

  max-inline-size: var(--maxWidth, 100%);

  ",
        [Function],
        "

  ",
        [Function],
        "
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "centerChildren": [Function],
      "centerText": [Function],
      "maxWidth": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-bczRLJ",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Column": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 1403353376,
      "baseStyle": undefined,
      "componentId": "sc-gKXOVf",
      "isStatic": false,
      "rules": [
        "
  @property --span {
    syntax: \\"<number>\\";
    inherits: true;
    initial-value: 1;
  }

  @property --offsetStart {
    syntax: \\"<number>\\";
    inherits: true;
    initial-value: 1;
  }

  @property --offsetEnd {
    syntax: \\"<number>\\";
    inherits: true;
    initial-value: 1;
  }

  grid-column: span min(var(--span, 1), var(--columns, 1));

  &[style*=\\"--offset\\"] {
    display: contents;
  }

  &[style*=\\"--offset\\"] > * {
    grid-column: span min(var(--span, 1), var(--columns, 1));
  }

  &[style*=\\"--offsetStart\\"]::before {
    content: \\"\\";
    grid-column: span min(var(--offsetStart, 1), var(--columns, 1));
  }

  &[style*=\\"--offsetEnd\\"]::after {
    content: \\"\\";
    grid-column: span min(var(--offsetEnd, 1), var(--columns, 1));
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "span": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-gKXOVf",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "ColumnDrop": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 1374563725,
      "baseStyle": undefined,
      "componentId": "sc-dkzDqf",
      "isStatic": false,
      "rules": [
        "
  @property --minItemWidth {
    syntax: \\"<length-percentage>\\";
    inherits: true;
    initial-value: ",
        "159px",
        ";
  }

  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0px;
  }

  box-sizing: border-box;
  > * {
    margin: 0;
    flex-basis: var(--minItemWidth, ",
        "159px",
        ");
    flex-grow: ",
        [Function],
        ";
    flex-shrink: 1;
  }

  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: var(--gutter, 0px);
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "gutter": [Function],
      "minItemWidth": [Function],
      "noStretchedColumns": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-dkzDqf",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Columns": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -1106060427,
      "baseStyle": undefined,
      "componentId": "sc-jSMfEi",
      "isStatic": false,
      "rules": [
        "",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "columns": [Function],
      "dense": [Function],
      "gutter": [Function],
      "switchAt": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-jSMfEi",
    "target": {
      "$$typeof": Symbol(react.forward_ref),
      "render": [Function],
    },
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Cover": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -1644136202,
      "baseStyle": undefined,
      "componentId": "sc-iBkjds",
      "isStatic": false,
      "rules": [
        "
  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0;
  }

  @property --minHeight {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 100vh;
  }

  > * {
    margin: 0;
  }

  display: flex;
  flex-direction: column;
  gap: var(--gutter, 0px);

  min-block-size: var(--minHeight, 100vh);

  > [data-bedrock-cover-centered] {
    margin-block-start: auto;
    margin-block-end: auto;

    ",
        [Function],
        ";
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "bottom": [Function],
      "gutter": [Function],
      "minHeight": [Function],
      "stretchContent": [Function],
      "top": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-iBkjds",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Frame": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 477837657,
      "baseStyle": undefined,
      "componentId": "sc-ftvSup",
      "isStatic": false,
      "rules": [
        "
  box-sizing: border-box;
  display: block;
  inline-size: 100%;
  position: relative;
  overflow: hidden;

  &[style*=\\"--ratio\\"] {
    aspect-ratio: var(--ratio);
  }

  > * {
    position: absolute;

    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    inset-inline-end: 0;

    inset-block: 0;
    inset-inline: 0;

    display: flex;
    justify-content: center;
    align-items: center;
  }

  > :is(img, video) {
    inline-size: 100%;
    block-size: 100%;
    size: 100%;

    object-fit: cover;
    object-position: ",
        [Function],
        ";
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "position": [Function],
      "ratio": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-ftvSup",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "GlobalStyles": {
    "$$typeof": Symbol(react.memo),
    "compare": null,
    "type": [Function],
  },
  "Grid": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -133029960,
      "baseStyle": undefined,
      "componentId": "sc-papXJ",
      "isStatic": false,
      "rules": [
        "
  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0;
  }

  @property --minItemWidth {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: ",
        "639px",
        ";
  }

  box-sizing: border-box;
  > * {
    margin: 0;
  }

  display: grid;
  gap: var(--gutter, 0px);

  grid-template-columns: repeat(
    auto-fit,
    minmax(min(var(--minItemWidth, ",
        "639px",
        "), 100%), 1fr)
  );
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "gutter": [Function],
      "minItemWidth": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-papXJ",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Inline": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 1218769958,
      "baseStyle": e {
        "baseHash": -797544179,
        "baseStyle": undefined,
        "componentId": "sc-jqUVSM",
        "isStatic": false,
        "rules": [
          "
  box-sizing: border-box;
  > * {
    margin: 0;
  }

  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, 0px);

  justify-content: ",
          [Function],
          ";

  align-items: ",
          [Function],
          ";
",
        ],
        "staticRulesId": "",
      },
      "componentId": "sc-kDDrLX",
      "isStatic": false,
      "rules": [
        "
  @property --switchAt {
    syntax: \\"<length-percentage>\\";
    inherits: true;
    initial-value: 0;
  }
  @property --minItemWidth {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0;
  }
  flex-wrap: nowrap;

  > * {
    margin: 0;
  }

  ",
        [Function],
        "

  &[style*=\\"--minItemWidth\\"] {
    > * {
      min-inline-size: var(--minItemWidth, 0);
    }
  }

  &[style*=\\"--switchAt\\"] {
    flex-wrap: wrap;
    > * {
      flex-basis: calc((var(--switchAt) - (100% - var(--gutter, 0px))) * 999);
    }
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [
      "sc-jqUVSM",
    ],
    "propTypes": {
      "align": [Function],
      "gutter": [Function],
      "justify": [Function],
      "minItemWidth": [Function],
      "stretch": [Function],
      "switchAt": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-kDDrLX",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "InlineCluster": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -797544179,
      "baseStyle": undefined,
      "componentId": "sc-jqUVSM",
      "isStatic": false,
      "rules": [
        "
  box-sizing: border-box;
  > * {
    margin: 0;
  }

  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, 0px);

  justify-content: ",
        [Function],
        ";

  align-items: ",
        [Function],
        ";
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "align": [Function],
      "gutter": [Function],
      "justify": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-jqUVSM",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "MasonryGrid": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 1222194960,
      "baseStyle": e {
        "baseHash": 1577695731,
        "baseStyle": undefined,
        "componentId": "sc-iqcoie",
        "isStatic": false,
        "rules": [
          "
  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0;
  }

  @property --minItemWidth {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: ",
          "639px",
          ";
  }

  box-sizing: border-box;
  > * {
    margin: 0;
  }

  display: grid;
  gap: var(--gutter, 0px);

  grid-template-columns: repeat(
    auto-fit,
    minmax(min(var(--minItemWidth, ",
          "639px",
          "), 100%), 1fr)
  );
",
        ],
        "staticRulesId": "",
      },
      "componentId": "sc-evZas",
      "isStatic": false,
      "rules": [
        "
  grid-template-rows: 1px;
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [
      "sc-iqcoie",
    ],
    "propTypes": {
      "gutter": [Function],
      "minItemWidth": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-evZas",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "PadBox": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 462449467,
      "baseStyle": undefined,
      "componentId": "sc-breuTD",
      "isStatic": false,
      "rules": [
        "
  box-sizing: border-box;
  ",
        [Function],
        "
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "padding": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-breuTD",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Reel": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -166012448,
      "baseStyle": undefined,
      "componentId": "sc-ksZaOG",
      "isStatic": false,
      "rules": [
        "
  box-sizing: border-box;
  > * {
    margin: 0;
    scroll-snap-align: start;
  }

  display: flex;
  gap: var(--gutter, 0px);

  overflow-x: auto;

  scroll-snap-type: ",
        [Function],
        ";
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "gutter": [Function],
      "snapType": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-ksZaOG",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Split": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 1246874392,
      "baseStyle": undefined,
      "componentId": "sc-fnykZs",
      "isStatic": false,
      "rules": [
        "",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "fraction": [Function],
      "gutter": [Function],
      "switchAt": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-fnykZs",
    "target": {
      "$$typeof": Symbol(react.forward_ref),
      "render": [Function],
    },
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Stack": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -246840538,
      "baseStyle": undefined,
      "componentId": "sc-hKMtZM",
      "isStatic": false,
      "rules": [
        "
  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0px;
  }
  box-sizing: border-box;
  > * {
    margin: 0;
  }

  display: grid;
  gap: var(--gutter, 0px);
  align-content: start;

  & > [data-bedrock-column] {
    grid-column: span 1 / auto;
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "gutter": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-hKMtZM",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "breakPoints": {
    "large": 1199,
    "largeOnly": [
      1024,
      1199,
    ],
    "medium": 1023,
    "mediumOnly": [
      640,
      1023,
    ],
    "smallOnly": 639,
    "xlarge": 1439,
    "xlargeOnly": [
      1200,
      1439,
    ],
    "xxlarge": 1920,
  },
  "checkIsCSSLength": [Function],
  "getSafeGutter": [Function],
  "getSizeValue": [Function],
  "getSpacingValue": [Function],
  "init": [Function],
  "mergeBreakpoints": [Function],
  "registerCallback": [Function],
  "reset": [
    "
  /*
  reset.css
*/

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  * {
    margin: 0;
  }

  ul[class],
  ol[class] {
    padding: 0;
    list-style: none;
  }

  html:focus-within {
    scroll-behavior: smooth;
  }

  body {
    min-block-size: 100vh;
    text-rendering: optimizeSpeed;
    line-height: 1.5;
    font-size: 100%;
    -webkit-font-smoothing: antialiased;
  }

  a:not([class]) {
    text-decoration-skip-ink: auto;
  }

  img,
  picture {
    display: block;
    max-inline-size: 100%;
  }

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  li,
  figcaption {
    max-inline-size: 60ch;
    overflow-wrap: break-word;
  }

  input,
  button,
  textarea,
  select {
    font: inherit;
    max-inline-size: 100%;
  }

  .js-focus-visible :focus:not(.focus-visible) {
    outline: none;
  }

  @media (prefers-reduced-motion: reduce) {
    html:focus-within {
      scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
",
  ],
  "sizes": {
    "large": "1199px",
    "medium": "1023px",
    "small": "639px",
    "xlarge": "1439px",
    "xsmall": "319px",
    "xxlarge": "1920px",
    "xxsmall": "159px",
  },
  "spacing": {
    "lg": "1rem",
    "lgXl": "1.5rem",
    "md": "0.5rem",
    "mdLg": "0.75rem",
    "none": "0px",
    "sm": "0.25rem",
    "xl": "2rem",
    "xlXXl": "3rem",
    "xs": "0.125rem",
    "xxl": "4rem",
    "xxs": "0.0625rem",
  },
  "useContainerQuery": [Function],
  "useForwardedRef": [Function],
  "useResizeObserver": [Function],
  "useStatefulRef": [Function],
  "validateGutter": [Function],
  Symbol(Symbol.toStringTag): "Module",
}
`;
