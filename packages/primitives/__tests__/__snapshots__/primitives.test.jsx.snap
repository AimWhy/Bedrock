// Vitest Snapshot v1

exports[`primitives > primitives snapshot 1`] = `
{
  "AppBoundary": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 392846413,
      "baseStyle": undefined,
      "componentId": "sc-gswNZR",
      "isStatic": false,
      "rules": [
        "
  padding: 0;
  max-inline-size: 100%;
  overflow: hidden;
  height: 100%;
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "boundarySize": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-gswNZR",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Center": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 138803661,
      "baseStyle": undefined,
      "componentId": "sc-bcXHqe",
      "isStatic": false,
      "rules": [
        "
  @property --maxWidth {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 100%;
  }

  box-sizing: content-box;

  && {
    margin-inline-start: auto;
    margin-inline-end: auto;
    margin-inline: auto;
  }

  max-inline-size: var(--maxWidth, 100%);

  ",
        [Function],
        "

  ",
        [Function],
        "
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "centerChildren": [Function],
      "centerText": [Function],
      "maxWidth": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-bcXHqe",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Column": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
  },
  "ColumnDrop": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -1807137125,
      "baseStyle": undefined,
      "componentId": "sc-dkrFOg",
      "isStatic": false,
      "rules": [
        "
  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0px;
  }

  box-sizing: border-box;
  > * {
    margin: 0;
    flex-basis: var(--minItemWidth, ",
        "480px",
        ");
    flex-grow: ",
        [Function],
        ";
    flex-shrink: 1;
  }

  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: var(--gutter, 0px);
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "minItemWidth": [Function],
      "noStretchedColumns": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-dkrFOg",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Columns": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
  },
  "Cover": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 1665723835,
      "baseStyle": undefined,
      "componentId": "sc-hLBbgP",
      "isStatic": false,
      "rules": [
        "
  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0;
  }

  @property --minHeight {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 100vh;
  }

  > * {
    margin: 0;
  }

  display: flex;
  flex-direction: column;
  gap: var(--gutter, 0px);

  min-block-size: var(--minHeight, 100vh);

  > [data-bedrock-cover-centered] {
    margin-block-start: auto;
    margin-block-end: auto;

    ",
        [Function],
        ";
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "bottom": [Function],
      "minHeight": [Function],
      "stretchContent": [Function],
      "top": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-hLBbgP",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Frame": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
  },
  "GlobalStyles": {
    "$$typeof": Symbol(react.memo),
    "compare": null,
    "type": [Function],
  },
  "Grid": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
  },
  "Inline": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
      [Function],
    ],
    "componentStyle": e {
      "baseHash": 816878857,
      "baseStyle": e {
        "baseHash": -1364304449,
        "baseStyle": undefined,
        "componentId": "sc-eDvSVe",
        "isStatic": false,
        "rules": [
          "
  box-sizing: border-box;
  > * {
    margin: 0;
  }

  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, 0px);

  justify-content: ",
          [Function],
          ";

  align-items: ",
          [Function],
          ";
",
        ],
        "staticRulesId": "",
      },
      "componentId": "sc-jSUZER",
      "isStatic": false,
      "rules": [
        "
  @property --switchAt {
    syntax: \\"<length-percentage>\\";
    inherits: true;
    initial-value: 0;
  }

  flex-wrap: nowrap;

  > * {
    margin: 0;
  }

  ",
        [Function],
        "

  &[style*=\\"--minItemWidth\\"] {
    > * {
      min-inline-size: var(--minItemWidth, 0);
    }
  }

  &[style*=\\"--switchAt\\"] {
    flex-wrap: wrap;
    > * {
      flex-basis: calc((var(--switchAt) - (100% - var(--gutter, 0px))) * 999);
    }
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [
      "sc-eDvSVe",
    ],
    "propTypes": {
      "align": [Function],
      "justify": [Function],
      "minItemWidth": [Function],
      "stretch": [Function],
      "switchAt": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-jSUZER",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "InlineCluster": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -1364304449,
      "baseStyle": undefined,
      "componentId": "sc-eDvSVe",
      "isStatic": false,
      "rules": [
        "
  box-sizing: border-box;
  > * {
    margin: 0;
  }

  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, 0px);

  justify-content: ",
        [Function],
        ";

  align-items: ",
        [Function],
        ";
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "align": [Function],
      "justify": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-eDvSVe",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "MasonryGrid": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
  },
  "PadBox": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
  },
  "Reel": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -1113249035,
      "baseStyle": undefined,
      "componentId": "sc-gKPRtg",
      "isStatic": false,
      "rules": [
        "
  box-sizing: border-box;
  > * {
    margin: 0;
    scroll-snap-align: start;
  }

  display: flex;
  gap: var(--gutter, 0px);

  overflow-x: auto;

  scroll-snap-type: ",
        [Function],
        ";
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "snapType": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-gKPRtg",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Split": {
    "$$typeof": Symbol(react.forward_ref),
    "attrs": [
      [Function],
    ],
    "componentStyle": e {
      "baseHash": -2015370,
      "baseStyle": undefined,
      "componentId": "sc-iBYQkv",
      "isStatic": false,
      "rules": [
        "
  @property --gutter {
    syntax: \\"<length-percentage>\\";
    inherits: false;
    initial-value: 0;
  }

  @property --switchAt {
    syntax: \\"<length-percentage>\\";
    inherits: true;
    initial-value: 0;
  }

  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, 0);

  > * {
    box-sizing: border-box;
    margin: 0;
    flex-grow: 1;
    max-inline-size: unset;
  }

  &[data-bedrock-split~=\\"fraction:1/4\\"] > *:nth-child(odd) {
    flex-basis: max(var(--minItemWidth, 0px), calc(25% - var(--gutter) / 4));
  }

  &[data-bedrock-split~=\\"fraction:1/3\\"] > *:nth-child(odd) {
    flex-basis: max(
      var(--minItemWidth, 0px),
      calc(33.333% - var(--gutter) / 3)
    );
  }

  &[data-bedrock-split~=\\"fraction:1/2\\"] > *:nth-child(odd) {
    flex-basis: max(var(--minItemWidth, 0px), calc(50% - var(--gutter) / 2));
  }

  &[data-bedrock-split~=\\"fraction:2/3\\"] > *:nth-child(even) {
    flex-basis: max(
      var(--minItemWidth, 0px),
      calc(33.333% - var(--gutter) / 3)
    );
  }

  &[data-bedrock-split~=\\"fraction:3/4\\"] > *:nth-child(even) {
    flex-basis: max(var(--minItemWidth, 0px), calc(25% - var(--gutter) / 4));
  }

  &[data-bedrock-split~=\\"fraction:auto-start\\"] > *:nth-child(odd) {
    flex-basis: var(--minItemWidth, 0);
  }

  &[data-bedrock-split~=\\"fraction:auto-end\\"] > *:nth-child(even) {
    flex-basis: var(--minItemWidth, 0);
  }

  :is([data-bedrock-split~=\\"fraction:1/4\\"], [data-bedrock-split~=\\"fraction:1/3\\"], [data-bedrock-split~=\\"fraction:1/2\\"], [data-bedrock-split~=\\"fraction:auto-start\\"])
    > *:nth-child(even) {
    --largestWidth: calc(100% - var(--gutter, 0px));
    flex-basis: calc(
      (var(--switchAt, var(--largestWidth)) - var(--largestWidth)) * 999
    );
    min-inline-size: max(
      min(var(--minItemWidth, 0), 100%),
      calc(50% - var(--gutter))
    );
    flex-grow: 999;
  }

  :is([data-bedrock-split~=\\"fraction:3/4\\"], [data-bedrock-split~=\\"fraction:2/3\\"], [data-bedrock-split~=\\"fraction:auto-end\\"])
    > *:nth-child(odd) {
    --largestWidth: calc(100% - var(--gutter, 0px));
    flex-basis: calc(
      (var(--switchAt, var(--largestWidth)) - var(--largestWidth)) * 999
    );
    min-inline-size: max(
      min(var(--minItemWidth, 0), 100%),
      calc(50% - var(--gutter))
    );
    flex-grow: 999;
  }
",
      ],
      "staticRulesId": "",
    },
    "foldedComponentIds": [],
    "propTypes": {
      "fraction": [Function],
    },
    "render": [Function],
    "shouldForwardProp": undefined,
    "styledComponentId": "sc-iBYQkv",
    "target": "div",
    "toString": [Function],
    "warnTooManyClasses": [Function],
    "withComponent": [Function],
  },
  "Stack": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
  },
  "ThemeContext": {
    "$$typeof": Symbol(react.context),
    "Consumer": {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": [Circular],
    },
    "Provider": {
      "$$typeof": Symbol(react.provider),
      "_context": [Circular],
    },
    "_calculateChangedBits": null,
    "_currentRenderer": null,
    "_currentRenderer2": null,
    "_currentValue": {},
    "_currentValue2": {},
    "_threadCount": 0,
  },
  "ThemeProvider": [Function],
  "checkIsCSSLength": [Function],
  "getSafeGutter": [Function],
  "getSizeValue": [Function],
  "getSpacingValue": [Function],
  "init": [Function],
  "registerCallback": [Function],
  "reset": [
    "
  /*
  reset.css
*/

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  * {
    margin: 0;
  }

  ul[class],
  ol[class] {
    padding: 0;
    list-style: none;
  }

  html:focus-within {
    scroll-behavior: smooth;
  }

  body {
    min-block-size: 100vh;
    text-rendering: optimizeSpeed;
    line-height: 1.5;
    font-size: 100%;
    -webkit-font-smoothing: antialiased;
  }

  a:not([class]) {
    text-decoration-skip-ink: auto;
  }

  img,
  picture {
    display: block;
    max-inline-size: 100%;
  }

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  li,
  figcaption {
    max-inline-size: 60ch;
    overflow-wrap: break-word;
  }

  input,
  button,
  textarea,
  select {
    font: inherit;
    max-inline-size: 100%;
  }

  .js-focus-visible :focus:not(.focus-visible) {
    outline: none;
  }

  @media (prefers-reduced-motion: reduce) {
    html:focus-within {
      scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
",
  ],
  "sizes": {
    "sizeContent1": "20ch",
    "sizeContent2": "45ch",
    "sizeContent3": "60ch",
    "sizeHeader1": "20ch",
    "sizeHeader2": "25ch",
    "sizeHeader3": "35ch",
    "sizeLg": "1024px",
    "sizeMd": "768px",
    "sizeSm": "480px",
    "sizeXl": "1440px",
    "sizeXs": "360px",
    "sizeXxl": "1920px",
    "sizeXxs": "240px",
  },
  "spacing": {
    "size00": "-.25rem",
    "size000": "-.5rem",
    "size1": ".25rem",
    "size10": "5rem",
    "size11": "7.5rem",
    "size12": "10rem",
    "size13": "15rem",
    "size14": "20rem",
    "size15": "30rem",
    "size2": ".5rem",
    "size3": "1rem",
    "size4": "1.25rem",
    "size5": "1.5rem",
    "size6": "1.75rem",
    "size7": "2rem",
    "size8": "3rem",
    "size9": "4rem",
  },
  "useContainerQuery": [Function],
  "useForwardedRef": undefined,
  "useResizeObserver": undefined,
  "useStatefulRef": undefined,
  "useTheme": [Function],
}
`;
