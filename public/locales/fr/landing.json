{
  "subtitle": "Le Lodash des mises en page Web",
  "description": "Une collection de composants utilitaires conçue pour être utilisés en créant des blocks pour vos mises en page d’applications web.",
  "getStarted": "Get Started",
  "composableLayout": {
    "title": "Mises en page Composable",
    "description1": "La plupart des mises en page que l'on utilise sur le web ne sont pas uniques. Elles peuvent souvent être décomposés en une poignée de modèles de mise en page. C’est cette combinaison de modèles qui forment notre mis en page générale.",
    "description2": "Bedrock Layout Primitives, sont construites avec ça en tête. Chaque composant est construit pour bien faire un modèle de mis en page. En combinant ces composants individuels, vous pouvez créer vos propres mises en page personnalisées. Beaucoup de mis en page \"complexes\" que l'ont voit sur le web peuvent être créées en combinant cette poignée de Bedrock Layout primitives. ",
    "exampleLink": "Plus d'exemples de mis en page dans notre section \"exemple\"",
    "description3": "Plus d’information sur la création de mis en page dans la section ",
    "gettingStartedLink": "Getting Started Introduction."
  },
  "missingComponents": {
    "title": "Composant manquant de votre système de design",
    "description1": "Votre système de design typique va avoir beaucoup de composants, mais peu sont dédiés à les placer sur votre page. Bedrock Layout Primitives sont conçues pour vous aider à amplifier votre système de design, en vous fournissant un ensemble de mises en page primitives, que vous pouvez combiner afin de créer une mise en page générale.",
    "description2": "Vous pouvez utiliser Bedrock Layout Primitives avec n’importe quel système de design. ",
    "integrationLink": "Reportez-vous aux instructions de comment intégrer Bedrock Layout Primitives dans mon système de design."
  },
  "notJustReact": {
    "title": "Pas seulemt pour React",
    "description1": "Vous ne voulez pas utiliser React? Vous êtes couvert. Bedrock Layout Primitives est également une Framework CSS. Créez en utilisant les attributs de données, de cette façon vous conserver le composant comme expérience du développeur, sans polluer vos noms de classes. N’importe quelle application qui utilise HTML et CSS, peut bénéficier de Bedrock Layouts. ",
    "cssOnlyLink": "Reportez-vous à \"comment utiliser Bedrock Layout Primitives dans mon application\"",
    "description2": "Une version pour Solid.js est en ce moment en développement. Plus d'informaiton sur Solid-Bedrock ",
    "solidLink": "solid.bedrock-layout.dev."
  },
  "gettingStarted": {
    "title": "Prêt à commencer?",
    "description1": "Suivez notre tutoriel dans la section ",
    "gettingStartedLink": "Getting Started introduction ",
    "description2": "pour apprendre les bases de Bedrock Layout Primitives.",
    "description3": "Vous pouvez également jetter un oeil à notre API pour chaque composant, par exemple ",
    "apiLink": "the Stack component."
  },
  "contribute": {
    "title": "Contributeurs",
    "description1": "Un énorme merci à toutes celles et ceux pour leur contribution. ",
    "getInvolved": "Vous souhaitez contribuer?",
    "description2": "En complément de la liste au dessus, ceux qui ont apporté leur idées, leur retour et de la documentaion:"
  },
  "sponsors": {
    "title": "Sponsor Bedrock Layouts",
    "description1": "Vous pouvez être sponsor de Bedrock Layouts sur Github Sponsors.",
    "sponsorLink": "Sponsor"
  }
}
