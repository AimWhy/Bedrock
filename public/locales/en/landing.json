{
  "subtitle": "The Lodash of Web Layouts",
  "description": "A collection of utility components that are designed to be used as building blocks for your web application's layout.",
  "getStarted": "Get Started",
  "composableLayout": {
    "title": "Composable Layouts",
    "description1": "Most of the layouts we use on the web are not that unique. They often can be broken down into just a handful of layout patterns. It is the combination of these patterns that make up the overall layout.",
    "description2": "Bedrock Layout Primitives are built with this in mind. Each component is built to do one layout pattern well. By composing these individual components together you can create your own custom layouts. Many of the \"complex\" layouts that we make on the web can be created by composing together a handful of the Bedrock Layout Primitives. There are ",
    "exampleLink": "more examples of layout recipes in our examples section.",
    "description3": "You can learn more about layout composition in the the ",
    "gettingStartedLink": "Getting Started Introduction."
  },
  "missingComponents": {
    "title": "Your Design System's Missing Components",
    "description1": "Your typical design system will have a lot of components, but only a few of them are dedicated to placing those components in your page. Bedrock Layout Primitives are designed to help you augment your design system, by giving you a set of layout primitives that can be composed together to create a complete layout.",
    "description2": "You can use Bedrock Layout Primitives with any design system. Bedrock Layout's spacing scheme can be easily overridden to match your design system. ",
    "integrationLink": "Check out the instructions on how to integrate the Bedrock Layout Primitives into your Design System."
  },
  "notJustReact": {
    "title": "Not Just For React",
    "description1": "Don't want to use React? We have you covered. Bedrock Layout Primitives is also a CSS Framework. Built using data attributes, you still retain that component like developer experience without polluting the your class names. Any app that utilizes html and CSS can take advantage of Bedrock Layouts. ",
    "cssOnlyLink": "Check out the instructions on how to use Bedrock Layout Primitives in your app.",
    "description2": "A solid.js version is also in the works. You can checkout Solid-Bedrock over at ",
    "solidLink": "solid.bedrock-layout.dev."
  },
  "gettingStarted": {
    "title": "Ready to Get Started?",
    "description1": "You can start by going through the tutorial over in our ",
    "gettingStartedLink": "Getting Started introduction ",
    "description2": "to learn the basics of how to use Bedrock Layout Primitives.",
    "description3": "You can also check out the API of any of our individual components, for example ",
    "apiLink": "the Stack component."
  },
  "contribute": {
    "title": "Contributors",
    "description1": "Thank you to everyone who has contributed code so far. ",
    "getInvolved": "Get Involved yourself!",
    "description2": "In addition to the above, the following have provided feedback, ideas, and documentation:"
  },
  "sponsors": {
    "title": "Sponsor Bedrock Layouts",
    "description1": "You can sponsor Bedrock Layouts on Github Sponsors.",
    "sponsorLink": "Sponsor"
  }
}
